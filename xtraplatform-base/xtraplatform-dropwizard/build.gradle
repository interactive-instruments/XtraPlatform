
version = '2.0.6'

ext {
    dropwizardVersion = '1.3.17'
    jacksonVersion = '2.9.10'
}

dependencies {
    //implementation project(':xtraplatform-runtime')
    //implementation rootProject.configurations.getByName('bundle').dependencies.find {it.name == 'org.apache.felix.ipojo'}
}

//TODO: is this still needed
jar {
    manifest {
        instructionFirst 'Import-Package', 'io.dropwizard.metrics'

        /*instructionReplace 'Require-Capability', 'osgi.ee;filter:="(&(osgi.ee=JavaSE)(version=1.8))"'

        // added via system bundle in xtraplatform-runtime, exclude here
        instruction 'Embed-Excludes', 'slf4j-api' , 'logback-classic', 'logback-core'

        //java 11
        instructionFirst 'Import-Package', '!com.sun.xml.fastinfoset.*'
        instructionFirst 'Import-Package', '!org.jvnet.*'

        instructionFirst 'Import-Package', '!org.yaml.*'
        instructionFirst 'Import-Package', '!javax.persistence'
        instructionFirst 'Import-Package', '!javax.interceptor'
        instructionFirst 'Import-Package', '!javax.annotation.security'
        instructionFirst 'Import-Package', '!javax.inject'
        instructionFirst 'Import-Package', '!javax.ejb'
        instructionFirst 'Import-Package', '!javax.enterprise.*'
        instructionFirst 'Import-Package', '!org.jboss.logmanager'
        instructionFirst 'Import-Package', '!javax.servlet.jsp.*'
        instructionFirst 'Import-Package', '!scala.*'
        instructionFirst 'Import-Package', '!org.jsoup.*'
        instructionFirst 'Import-Package', '!org.jruby.*'
        instructionFirst 'Import-Package', '!com.twitter.*'
        instructionFirst 'Import-Package', '!com.thoughtworks.*'
        instructionFirst 'Import-Package', '!org.eclipse.jetty.jmx'
        instructionFirst 'Import-Package', '!com.sun.net.httpserver'
        instructionFirst 'Import-Package', '!org.joda.convert'

        //instructionFirst 'Import-Package', '!javax.mail.*'
        instructionFirst 'Import-Package', '!javax.sql.*'
        instructionFirst 'Import-Package', '!javax.jms.*'
        instructionFirst 'Import-Package', '!org.codehaus.commons.*'
        instructionFirst 'Import-Package', '!org.codehaus.janino.*'
        instructionFirst 'Import-Package', '!org.codehaus.groovy.*'
        instructionFirst 'Import-Package', '!groovy.lang'

        instructionFirst 'Import-Package', '!jersey.repackaged.com.google.common.*'
        instructionFirst 'Import-Package', '!com.sun.jdi.connect.*'
        instructionFirst 'Import-Package', '!com.sun.jdi.event.*'
        instructionFirst 'Import-Package', '!org.apache.logging.log4j.*'
        instructionFirst 'Import-Package', '!javax.money.*'
        instructionFirst 'Import-Package', '!org.apache.catalina.valves'
        instructionFirst 'Import-Package', '!com.sun.jdi.request.*'
        instructionFirst 'Import-Package', '!com.sun.jdi.*'
        instructionFirst 'Import-Package', '!org.apache.logging.log4j.message.*'
        instructionFirst 'Import-Package', '!org.apache.catalina.*'
        instructionFirst 'Import-Package', '!org.apache.log'
        instructionFirst 'Import-Package', '!org.apache.catalina.connector'
        instructionFirst 'Import-Package', '!javafx.beans.value.*'
        instructionFirst 'Import-Package', '!org.apache.logging.log4j.spi.*'
        instructionFirst 'Import-Package', '!org.apache.avalon.framework.logger.*'
        instructionFirst 'Import-Package', '!org.apache.coyote.*'
        instructionFirst 'Import-Package', '!afu.org.checkerframework.framework.type'
        instructionFirst 'Import-Package', '!afu.com.sun.source.tree'

        instructionFirst 'Import-Package', '!org.checkerframework.framework.qual'
        instructionFirst 'Import-Package', '!afu.org.checkerframework.framework.qual'
        instructionFirst 'Import-Package', '!afu.org.checkerframework.checker.formatter.qual'
        instructionFirst 'Import-Package', '!afu.org.checkerframework.checker.nullness.qual'
        instructionFirst 'Import-Package', '!afu.org.checkerframework.checker.units.qual'
        instructionFirst 'Import-Package', '!afu.org.checkerframework.dataflow.qual'
        instructionFirst 'Import-Package', '!afu.org.checkerframework.checker.regex.qual'
        instructionFirst 'Import-Package', '!org.checkerframework.dataflow.qual'
        instructionFirst 'Import-Package', '!org.checkerframework.checker.regex.qual'
        instructionFirst 'Import-Package', '!org.checkerframework.checker.nullness.qual'
        instructionFirst 'Import-Package', '!org.checkerframework.checker.formatter.qual'
        instructionFirst 'Import-Package', '!org.checkerframework.checker.units.qual'
        instructionFirst 'Import-Package', '!com.sun.tools.attach'
        instructionFirst 'Import-Package', '!com.sun.management'

         */
    }
}


/* old
instructionFirst 'Import-Package', 'javax.xml.stream'
instructionFirst 'Import-Package', 'org.w3c.dom'
instructionFirst 'Import-Package', 'javax.management'
instruction 'Import-Package', 'javax.annotation;version="[1.2,2)"'
instructionFirst 'Import-Package', 'javax.naming'
instructionFirst 'Import-Package', 'javax.net'
instructionFirst 'Import-Package', 'javax.activation'
instructionFirst 'Import-Package', 'org.xml.sax'
instructionFirst 'Import-Package', 'javax.xml.parsers'
instructionFirst 'Import-Package', 'javax.xml.transform'
instructionFirst 'Import-Package', 'javax.xml.transform.stream'
instructionFirst 'Import-Package', 'javax.xml.transform.sax'
instructionFirst 'Import-Package', 'javax.xml.transform.dom'
instructionFirst 'Import-Package', 'javax.xml.bind'
instructionFirst 'Import-Package', 'javax.xml.bind.annotation'
*/
